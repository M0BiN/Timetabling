{"version":3,"sources":["redux/reducers/enrollment.js","redux/reducers/information.js","redux/reducers/final.js","redux/reducers/distinct_group.js","redux/root-reducer.js","redux/store.js","temp.js","getInput.jsx","App.js","DNA.js","Pupolation.js","showTime.jsx","main.js","serviceWorker.js","index.js"],"names":["Initial_State","enrollment","dayEnrollment","timeEnrollment","rotationEnrollment","Enrollment","state","action","type","master","course","group","time","day","rotation","Infromation","payload","Group","combineReducers","information","final","dis_Group","middleWares","logger","store","createStore","rootReducer","applyMiddleware","tempEnrollment","tempDay","tempTime","tempIsRotation","withRouter","mainHistory","exit","history","React","useEffect","dispatch","getState","useState","setState","data","showEnroll","setShowEnroll","enrollTable","map","value","index","bottom","ListGroup","Item","key","masterDropDown","Dropdown","as","onSelect","choose","eventKey","rotationDropDown","courseDropDown","className","groupDropDown","timeDropDown","dayDropDown","DropdownButton","id","title","Button","variant","size","block","onClick","console","log","parseInt","newMaster","newCourse","newGruop","newTime","newDay","isRot","oldShow","concat","push","style","position","left","DNA","this","genes","fitness","normalFitness","userData","i","length","dna","Math","floor","random","score","theProf","theGroup","isRotation","theHour","theDay","number_of_rotation_in_same_time_for_prof","number_of_rotation_in_same_time_for_group","j","theProf2nd","theGroup2nd","isRotation2nd","theHour2nd","theDay2nd","bounuce","partner","child1st","child2nd","mutationRate","bestOverAll","Population","popMax","population","matingPool","generations","finished","perfectScore","bestofThebest","avg","totalFitness","best","hotSpot","calcFitness","total","newpop","saved","saveMEjesus","partnerA","giveMeOneGoodChild","partnerB","child","crossover","mutate","first","second","third","num","chance","sum","sketch","p","po","bestPhrase","allPhrases","high","setup","createP","b","getOverAll","all","groups","removeDuplicates","sort","noLoop","class","createCanvas","draw","clear","fill","text","naturalSelection","generate","evaluate","array","filter","a","indexOf","connect","useHistory","setGroup","isRotate","marginTop","table","shanbe_8_10","shanbe_10_12","shanbe_2_4","shanbe_4_6","yekshanbe_8_10","yekshanbe_10_12","yekshanbe_2_4","yekshanbe_4_6","doshanbe_8_10","doshanbe_10_12","doshanbe_2_4","doshanbe_4_6","seshanbe_8_10","seshanbe_10_12","seshanbe_2_4","seshanbe_4_6","chaharshanbe_8_10","chaharshanbe_10_12","chaharshanbe_2_4","chaharshanbe_4_6","star","Table","striped","bordered","hover","direction","App","exact","path","component","Getinput","Myapp","ShowTime","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e4e01e79.chunk.js","sourcesContent":["\r\nconst Initial_State = {\r\n    enrollment: [],\r\n    dayEnrollment: [],\r\n    timeEnrollment: [],\r\n    rotationEnrollment: []\r\n\r\n};\r\n\r\n\r\nconst Enrollment = (state = Initial_State, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SET_Enrollment': return {\r\n            ...state,\r\n            enrollment: [...state.enrollment, action.enrollment],\r\n            dayEnrollment: [...state.dayEnrollment, action.dayEnrollment],\r\n            timeEnrollment: [...state.timeEnrollment, action.timeEnrollment],\r\n            rotationEnrollment: [...state.rotationEnrollment, action.rotationEnrollment],\r\n        }\r\n        case 'SET_Enrollment_Temp': return {\r\n            \r\n            enrollment: action.enrollment,\r\n            dayEnrollment:  action.dayEnrollment,\r\n            timeEnrollment: action.timeEnrollment,\r\n            rotationEnrollment:  action.rotationEnrollment,\r\n        }\r\n        case 'SECTOR_CLEAR': return Initial_State;\r\n\r\n        default: return state;\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\n\r\nexport default Enrollment;","\r\nconst Initial_State = {\r\n    master: ['کرمی', 'بگ محمدی', 'ولیزاده', 'تنهایی', 'شیری', 'طاهری', 'غلامی'],\r\n    course: ['معماری', 'شبکه', 'کاماپیلر', 'جاوا', 'مدارمنطقی', 'بینایی', 'الگوریتم', 'مباحث ویژه', 'پایگاه داده', 'نرم افزار', 'طراحی زبان برنامه سازی', 'رباتیک'],\r\n    group: [95, 96, 97, 98],\r\n    time: ['بدون ساعت', '8-10', '10-12', '2-4', '4-6'],\r\n    day: ['بدون روز', 'شنبه', 'یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه'],\r\n    rotation: ['Yes', 'No']\r\n\r\n};\r\n\r\n\r\nconst Infromation = (state = Initial_State, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n\r\n        default: return state;\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\n\r\nexport default Infromation;","\r\n\r\nconst Infromation = (state = null, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SET_FINAL_ANSWER': return action.payload;\r\n\r\n        default: return state;\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\n\r\nexport default Infromation;","\r\n\r\nconst Group = (state = [], action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SET_Group': return action.payload;\r\n\r\n        default: return state;\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\n\r\nexport default Group;","import { combineReducers } from 'redux';\r\nimport Enrollment from './reducers/enrollment';\r\nimport information from './reducers/information';\r\nimport final from './reducers/final';\r\nimport dis_Group from './reducers/distinct_group';\r\nexport default combineReducers({\r\n    enrollment: Enrollment,\r\n    information,\r\n    final,\r\n    dis_Group\r\n})","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './root-reducer';\r\nimport logger from 'redux-logger';\r\nconst middleWares = [logger];\r\n\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middleWares));\r\n\r\nexport default store;","export const tempEnrollment = [\r\n    [0, 0, 0],\r\n[0, 0, 0],\r\n[3, 1, 0],\r\n[3, 1, 0],\r\n[3, 2, 0],\r\n[3, 2, 0],\r\n[2, 3, 0],\r\n[2, 3, 0],\r\n[1, 4, 1],\r\n[1, 4, 1],\r\n[3, 5, 1],\r\n[3, 5, 1],\r\n[0, 6, 1],\r\n[0, 6, 1],\r\n[2, 7, 1],\r\n[2, 7, 1],\r\n[0, 8, 2],\r\n[0, 8, 2],\r\n[2, 9, 2],\r\n[2, 9, 2],\r\n[2, 10, 2],\r\n[2, 10, 2],\r\n[4, 11, 2],\r\n[4, 11, 2],\r\n[1, 0, 3],\r\n[1, 0, 3],\r\n[1, 3, 3],\r\n[1, 3, 3],\r\n[3, 11, 3],\r\n[3, 11, 3],\r\n[3, 6, 3],\r\n[3, 6, 3]]\r\n\r\n// day\r\nexport const tempDay = [false, false, false, 3, false, false, false, false, 5, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\r\n\r\n// time\r\nexport const tempTime = [1, 1, 3, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\r\n\r\n\r\n// is rotation\r\nexport const tempIsRotation = [false, true, false, false, false, true, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false]\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport './get-input.css';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { withRouter } from \"react-router\";\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport store from './redux/store';\r\nimport Slide from 'react-reveal/Slide';\r\nimport {tempDay,tempEnrollment,tempIsRotation,tempTime} from './temp';\r\n// import { master, course, group, time, day, rotation} from './makeData';\r\n\r\n\r\nfunction App({ history }) {\r\n\r\n    React.useEffect(() => {\r\n       store.dispatch({type:'SECTOR_CLEAR'}); \r\n    },[]);\r\n    const { enrollment, information } = store.getState();\r\n    const { master, course, group, time, day, rotation } = information;\r\n\r\n    const [state, setState] = React.useState({ master: 0, course: 0, group: 0, time: 0, day: 0, rotation: 1 });\r\n    const [showEnroll, setShowEnroll] = React.useState({ data: [] });\r\n\r\n\r\n    const enrollTable = showEnroll.data.map((value, index) =>\r\n    <Slide bottom><ListGroup.Item key={`tablenum${index}`}>{`${value}`}</ListGroup.Item></Slide>\r\n    )\r\n\r\n\r\n    const masterDropDown = master.map((value, index) =>\r\n        <Dropdown.Item as=\"button\" onSelect={(choose) => setState({ ...state, master: choose })}\r\n            eventKey={index}\r\n            key={`master${index}`}\r\n        >{value}</Dropdown.Item>\r\n    );\r\n    const rotationDropDown = rotation.map((value, index) =>\r\n        <Dropdown.Item as=\"button\" onSelect={(choose) => setState({ ...state, rotation: choose })}\r\n            eventKey={index}\r\n            key={`rotation${index}`}\r\n        >{value}</Dropdown.Item>\r\n    );\r\n\r\n\r\n    const courseDropDown = course.map((value, index) =>\r\n        <div className='dropcontainer'>\r\n            <Dropdown.Item as=\"button\" onSelect={(choose) => setState({ ...state, course: choose })}\r\n                eventKey={index}\r\n                key={`course${index}`}\r\n            >{value}</Dropdown.Item>\r\n        </div>\r\n    );\r\n\r\n    const groupDropDown = group.map((value, index) =>\r\n        <div className='dropcontainer'>\r\n            <Dropdown.Item as=\"button\" onSelect={(choose) => setState({ ...state, group: choose })}\r\n                eventKey={index}\r\n                key={`group${index}`}\r\n            >{value}</Dropdown.Item>\r\n        </div>\r\n    );\r\n\r\n\r\n    const timeDropDown = time.map((value, index) =>\r\n        <div className='dropcontainer'>\r\n            <Dropdown.Item as=\"button\" onSelect={(choose) => setState({ ...state, time: choose })}\r\n                eventKey={index}\r\n                key={`time${index}`}\r\n            >{value}</Dropdown.Item>\r\n        </div>\r\n    );\r\n\r\n    const dayDropDown = day.map((value, index) =>\r\n        <div className='dropcontainer'>\r\n            <Dropdown.Item as=\"button\" onSelect={(choose) => setState({ ...state, day: choose })}\r\n                eventKey={index}\r\n                key={`day${index}`}\r\n            >{value}</Dropdown.Item>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='main-input'>\r\n            <div className='get-input'>\r\n\r\n                <DropdownButton id=\"dropdown-item-button\" title={master[state.master]}>\r\n                    {masterDropDown}\r\n                </DropdownButton>\r\n                <DropdownButton id=\"dropdown-item-button2\" title={course[state.course]}>\r\n                    {courseDropDown}\r\n                </DropdownButton>\r\n                <DropdownButton id=\"dropdown-item-button2\" title={group[state.group]}>\r\n                    {groupDropDown}\r\n                </DropdownButton>\r\n                <DropdownButton id=\"dropdown-item-button2\" title={rotation[state.rotation]}>\r\n                    {rotationDropDown}\r\n                </DropdownButton>\r\n                <DropdownButton id=\"dropdown-item-button2\" title={time[state.time]}>\r\n                    {timeDropDown}\r\n                </DropdownButton>\r\n                <DropdownButton id=\"dropdown-item-button2\" title={day[state.day]}>\r\n                    {dayDropDown}\r\n                </DropdownButton>\r\n\r\n\r\n\r\n                <div>\r\n                    <Button variant=\"secondary\" size=\"lg\" block\r\n                        onClick={() => {\r\n                            console.log(information)\r\n                            // enrollment.add([state.master, state.course, state.group]);\r\n                            store.dispatch({\r\n                                type: 'SET_Enrollment',\r\n                                enrollment: [state.master, state.course, state.group],\r\n                                timeEnrollment: (parseInt(state.time) !== 0) ? parseInt(state.time) : false,\r\n                                dayEnrollment: (parseInt(state.day) !== 0) ? parseInt(state.day) : false,\r\n                                rotationEnrollment: (information.rotation[state.rotation] === 'Yes') ? true : false\r\n                            })\r\n                            const newMaster = information.master[state.master];\r\n                            const newCourse = information.course[state.course];\r\n                            const newGruop = information.group[state.group];\r\n                            const newTime = ' - ' + information.time[state.time] + ' - ';\r\n                            const newDay = information.day[state.day] + '';\r\n                            const isRot = information.rotation[state.rotation] === 'Yes' ? '-rotation' : '';\r\n                            let oldShow = showEnroll.data.concat(newMaster + ' - ' + newGruop + ' - ' + newCourse + newTime + newDay + isRot);\r\n                            // timeEnrollment.add((state.time !== 0) ? state.time : false)\r\n                            // dayEnrollment.add((state.day !== 0) ? state.day : false)\r\n                            // rotationEnrollment.add((state.day !== 0) ? state.rotation : false);\r\n                            setShowEnroll({ data: oldShow })\r\n\r\n                        }\r\n                        }>\r\n                        Add\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <Button variant=\"success\" onClick={() => {\r\n                history.push('/2');\r\n            }}>GO!!!</Button>\r\n\r\n            <Button onClick={()=>{\r\n                store.dispatch({\r\n                                type: 'SET_Enrollment_Temp',\r\n                                enrollment: tempEnrollment,\r\n                                timeEnrollment: tempTime,\r\n                                dayEnrollment: tempDay,\r\n                                rotationEnrollment: tempIsRotation\r\n                            })\r\n            }} variant=\"warning\" style={{position:'absolute',left:'0',bottom:'50px'}}>Use Default Value</Button>\r\n\r\n            <ListGroup>\r\n                {enrollTable}\r\n            </ListGroup>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(App);\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Population from './Pupolation';\nimport P5Wrapper from 'react-p5-wrapper';\nimport { withRouter } from 'react-router-dom';\nimport store from './redux/store';\nimport Button from 'react-bootstrap/Button'\n\n\nlet mainHistory;\nlet exit;\n\n\nfunction App({ history }) {\n\n  mainHistory = history;\n\n\n\n  return (\n    <div className=\"App\">\n      <div className='canvasContainer'>\n        <P5Wrapper sketch={sketch} ></P5Wrapper>\n      </div>\n\n      {/* <Table /> */}\n\n      <Button variant=\"danger\" onClick={() => {\n        exit();\n      }}\n      >Finish NOW</Button>\n    <h4>زمانی که تغییرات و بهترین برازندگی برای چندین نسل ثابت ماند، از این دکمه استفاده کنید</h4>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n\n\n\n\n\n\n\n\n\n\nfunction sketch(p) {\n  let po;\n  let bestPhrase;\n  let allPhrases;\n  let stats;\n  let high = { fitness: 0 }\n  let final;\n\n  p.setup = () => {\n    bestPhrase = p.createP(\"All fittneses:\");\n    exit = () => {\n      let b = po.getOverAll();\n      store.dispatch({ type: 'SET_FINAL_ANSWER', payload: b });\n      let all = store.getState().enrollment.enrollment;\n\n\n      let groups = [];\n      for (let i = 0; i < all.length; i++) {\n        groups.push(parseInt(all[i][2]));\n      }\n\n      groups = removeDuplicates(groups);\n      groups = groups.sort();\n      // console.log(groups, ' removeDuplicaties...')\n      store.dispatch({ type: 'SET_Group', payload: groups });\n\n\n      p.noLoop();\n      mainHistory.push('/3')\n    }\n    //bestPhrase.position(10,10);\n    bestPhrase.class(\"best\");\n\n    allPhrases = p.createP(\"All phrases:\");\n    allPhrases.position(600, 10);\n    allPhrases.class(\"all\");\n\n    p.createCanvas(640, 360);\n\n\n    // Create a population with a target phrase, mutation rate, and population max\n    po = new Population(400, 0.025);\n  }\n\n  p.draw = () => {\n    p.clear();\n    po.calcFitness();\n    p.fill(20);\n\n    for (let i = 0; i < po.population.length; i++) {\n      p.text(po.population[i].fitness, 10, 10 * i);\n      if (high.fitness < po.population[i].fitness) {\n        high = po.population[i];\n      }\n\n    }\n    p.text('average: ' + po.avg, 40, 40)\n    po.naturalSelection();\n    po.generate();\n    po.calcFitness();\n    po.evaluate();\n    p.text(\"The Best Fittness Ever :  \" + po.getOverAll().fitness, 50, 90);\n    p.text(\"Total Generations: \" + po.generations, 60, 110)\n    if (po.finished) {\n\n      final = po.getOverAll();\n      // for (let i = 0; i < final.genes.length; i++) {\n      //   // console.log(' ostad:' + prof[enroll_prof[i]] + ' course:' + course[enroll_course[i]] + ' voridiye:' + group[enroll_group[i]] + ' ' + final.genes[i][0] + 'shanbe' + ' saat ' + final.genes[i][1] + ' ' + eroll_date_held_isV[i])\n      //   console.log(final)\n      // }\n      p.noLoop();\n      store.dispatch({ type: 'SET_FINAL_ANSWER', payload: final });\n      let all = store.getState().enrollment.enrollment;\n\n\n      let groups = [];\n      for (let i = 0; i < all.length; i++) {\n        groups.push(parseInt(all[i][2]));\n      }\n\n      groups = removeDuplicates(groups);\n      groups = groups.sort();\n      // console.log(groups, ' removeDuplicaties...')\n      store.dispatch({ type: 'SET_Group', payload: groups });\n\n\n\n\n      mainHistory.push('/3')\n\n    }\n\n\n\n\n\n  }\n\n}\n\nfunction removeDuplicates(array) {\n  return array.filter((a, b) => array.indexOf(a) === b)\n};","import store from './redux/store';\r\n\r\n\r\n\r\n// Constructor (makes a random DNA)\r\nclass DNA {\r\n    constructor() {\r\n        const { information, enrollment } = store.getState();\r\n        this.genes = [];\r\n        this.fitness = 0;\r\n        this.normalFitness = 0;\r\n        this.userData = enrollment;\r\n\r\n\r\n        for (let i = 0; i < this.userData.enrollment.length; i++) {\r\n            let dna = [];\r\n            if (this.userData.dayEnrollment[i]) {\r\n                // console.log(this.userData.dayEnrollment[i])\r\n                dna.push(this.userData.dayEnrollment[i]);\r\n            } else dna.push(Math.floor(Math.random() * 5) + 1); // Day from Sunday to Wensday\r\n            if (this.userData.timeEnrollment[i]) {\r\n                dna.push(this.userData.timeEnrollment[i]);\r\n            } else dna.push(Math.floor(Math.random() * 4) + 1); /// Hour from 08:00 AM to 06:30 PM\r\n\r\n\r\n            this.genes.push(dna);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // Fitness function (returns floating point % of \"correct\" characters)\r\n    calcFitness() {\r\n        let score = 200;\r\n        for (let i = 0; i < this.genes.length; i++) {\r\n            let theProf = this.userData.enrollment[i][0];\r\n            let theGroup = this.userData.enrollment[i][2];\r\n            let isRotation = this.userData.rotationEnrollment[i];\r\n            let theHour = this.genes[i][1];\r\n            let theDay = this.genes[i][0];\r\n            let number_of_rotation_in_same_time_for_prof = 0;\r\n            let number_of_rotation_in_same_time_for_group = 0;\r\n            for (let j = i + 1; j < this.genes.length; j++) {\r\n                let theProf2nd = this.userData.enrollment[j][0];\r\n                let theGroup2nd = this.userData.enrollment[j][2];\r\n                let isRotation2nd = this.userData.rotationEnrollment[j];\r\n                let theHour2nd = this.genes[j][1];\r\n                let theDay2nd = this.genes[j][0];\r\n\r\n                if (theDay === theDay2nd && theHour === theHour2nd) {\r\n                    score -= 8;\r\n                    if (theProf === theProf2nd) score -= 20;\r\n                    if (theGroup === theGroup2nd) score -= 20;\r\n                    if (isRotation2nd && isRotation && number_of_rotation_in_same_time_for_prof===0) {\r\n                        let bounuce = false;\r\n                        if (theProf === theProf2nd){\r\n                            number_of_rotation_in_same_time_for_prof++;\r\n                            score += 38;\r\n                            bounuce= true;\r\n                            \r\n                        } \r\n                        if (theGroup === theGroup2nd && number_of_rotation_in_same_time_for_group===0){\r\n                            score += 22;\r\n                            number_of_rotation_in_same_time_for_group++;\r\n                            if(bounuce)score+=4;\r\n                        } \r\n                        \r\n                    }\r\n                }\r\n                if ((theDay !== theDay2nd || theHour !== theHour2nd) && isRotation && isRotation2nd && theProf===theProf2nd){\r\n                    if(theDay !== theDay2nd)score--;\r\n                    if(theHour !== theHour2nd)score--;\r\n                }\r\n\r\n\r\n                // if(theProf===theProf2nd && isRotation && isRotation2nd && theDay!==theDay2nd && theHour!==theDay2nd){\r\n                //     score = score-3;\r\n\r\n                // }\r\n                // if(theProf===theProf2nd && isRotation && isRotation2nd && theDay===theDay2nd && theHour===theDay2nd){\r\n                //     score = score+3;\r\n\r\n                // }\r\n\r\n            }\r\n        }\r\n        if (score < 0){\r\n            score = 0;\r\n        }\r\n    \r\n        this.fitness =  score;\r\n    }\r\n\r\n    // getProffesor(dna) {\r\n    //     return dna.substr(0, this.Line.profLine);\r\n    // }\r\n\r\n    // getDay(dna) {\r\n    //     let i = this.Line.profLine + this.Line.courseLine + this.Line.groupLine + this.Line.classLine;\r\n    //     let j = this.Line.dayLine\r\n    //     return dna.substr(i, j);\r\n    // }\r\n\r\n    // getHour(dna) {\r\n    //     let i = this.Line.profLine + this.Line.courseLine + this.Line.groupLine + this.Line.classLine + this.Line.dayLine;\r\n\r\n    //     return dna.substr(i);\r\n    // }\r\n\r\n    // getClass(dna) {\r\n\r\n    // }\r\n\r\n    // Crossover\r\n    crossover(partner) {\r\n        // A new child\r\n        let child1st = new DNA(this.userData);\r\n        let child2nd = new DNA(this.userData);\r\n        let midLine = Math.floor(Math.random() * this.genes.length);\r\n        let oneLine = this.genes.length/3;\r\n        let nextLine = this.genes.length/3+this.genes.length/3;;\r\n        for (let i = 0; i < this.genes.length; i++) {\r\n            // console.log(this.genes[i])\r\n            if (Math.floor(Math.random()*100)) {\r\n                child1st.genes[i][0] = this.genes[i][0];\r\n                child1st.genes[i][1] = this.genes[i][1];\r\n                child2nd.genes[i][0] = partner.genes[i][0];\r\n                child2nd.genes[i][1] = partner.genes[i][1];\r\n            } else {\r\n                child1st.genes[i][0] = partner.genes[i][0];\r\n                child1st.genes[i][1] = partner.genes[i][1];\r\n                child2nd.genes[i][0] = this.genes[i][0];\r\n                child2nd.genes[i][1] = this.genes[i][1];\r\n            }\r\n        }\r\n        // child1st.mutate(0.1);\r\n        // child2nd.mutate(0.1);\r\n        return [child1st, child2nd];\r\n\r\n\r\n    }\r\n\r\n    // Based on a mutation probability, picks a new random character\r\n    mutate(mutationRate) {\r\n        for (let i = 0; i < this.genes.length; i++) {\r\n            if (Math.random(1) < mutationRate) {\r\n\r\n\r\n                if (!this.userData.dayEnrollment[i] || !this.userData.timeEnrollment[i]) {\r\n                    if (!this.userData.dayEnrollment[i][i]) {\r\n                        this.genes[i][0] = (Math.floor(Math.random() * 4) + 1); // Day from Sunday to Wensday\r\n                    }\r\n                    if (!this.userData.timeEnrollment[i]) {\r\n                        this.genes[i][1] = (Math.floor(Math.random() * 3) + 1); // Hour from 08:00 AM to 06:30 PM\r\n                    }\r\n                    break;\r\n\r\n                    \r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default DNA;","import DNA from './DNA';\r\nimport store from './redux/store';\r\nlet bestOverAll = { fitness: -1 };\r\n\r\nclass Population {\r\n  constructor(popMax, mutationRate) {\r\n    const { enrollment } = store.getState();\r\n    this.population = []; // Array to hold the current population\r\n    this.matingPool = []; // ArrayList which we will use for our \"mating pool\"\r\n    this.generations = 0; // Number of generations\r\n    this.finished = false; // Are we finished evolving?\r\n    this.userData = enrollment; // Target phrase\r\n    this.mutationRate = mutationRate; // Mutation rate\r\n    this.perfectScore = 100;\r\n    this.bestofThebest = { fitness: -1 };\r\n    this.avg = 0;\r\n    this.totalFitness = 0;\r\n\r\n    this.best = { fitness: 0 };\r\n    this.population = [];\r\n    for (let i = 0; i < popMax; i++) {\r\n      this.population[i] = new DNA(this.userData, this.hotSpot);\r\n      this.best = this.population[i];\r\n      // this.bestofThebest = this.population[i];\r\n    }\r\n    this.matingPool = [];\r\n  }\r\n  getOverAll() {\r\n    return this.bestofThebest;\r\n  }\r\n\r\n  // Fill our fitness array with a value for every member of the population\r\n  calcFitness() {\r\n    this.avg = 0;\r\n    this.totalFitness = 0;\r\n    for (let i = 0; i < this.population.length; i++) {\r\n      this.population[i].calcFitness();\r\n      bestOverAll = this.population[i].fitness > bestOverAll.fitness ? this.population[i] : bestOverAll;\r\n      this.avg += this.population[i].fitness;\r\n      this.totalFitness += this.population[i].fitness;\r\n      if (this.bestofThebest.fitness < this.population[i].fitness) {\r\n        this.bestofThebest = this.population[i];\r\n      }\r\n    }\r\n    this.avg = this.avg / this.population.length;\r\n  }\r\n\r\n  // Generate a mating pool\r\n  naturalSelection() {\r\n    let total = this.totalFitness;\r\n    for (let i = 0; i < this.population.length; i++) {\r\n      this.population[i].normalFitness = this.population[i].fitness / total;\r\n    }\r\n  }\r\n\r\n  // Create a new generation\r\n  generate() {\r\n    // Refill the population with children from the mating pool\r\n    let newpop = [];\r\n    const saved = this.saveMEjesus();\r\n    // newpop.push(saved[0],saved[1],saved[2])\r\n    // console.log('tol poll=',this.matingPool.length)\r\n    for (let i = 0; i < (this.population.length / 2)-1; i++) {\r\n      let partnerA = this.giveMeOneGoodChild() ;\r\n      let partnerB = this.giveMeOneGoodChild()\r\n      let child = partnerA.crossover(partnerB);\r\n      child[0].mutate(this.mutationRate);\r\n      child[1].mutate(this.mutationRate);\r\n      newpop.push(child[0]);\r\n      newpop.push(child[1]);\r\n    }\r\n    newpop.push(saved[0]);\r\n    newpop.push(saved[1]);\r\n    this.generations++;\r\n\r\n    this.population = newpop;\r\n  }\r\n\r\n\r\n\r\n  saveMEjesus() {\r\n    let first = { fitness: -1 };\r\n    let second = { fitness: -1 };\r\n    let third = { fitness: -1 };\r\n    for (let i = 0; i < this.population.length; i++) {\r\n      const num = this.population[i].fitness;\r\n      if (num > first.fitness) {\r\n        first = this.population[i];\r\n      } else {\r\n        if (num > second.fitness) {\r\n          second = this.population[i];\r\n        } else {\r\n          if (num > third.fitness) {\r\n            third = this.population[i];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return [first, second, third];\r\n  }\r\n\r\n\r\n\r\n\r\n  giveMeOneGoodChild() {\r\n\r\n    let chance = Math.random(1);\r\n    let index = 0;\r\n    while (chance > 0) {\r\n      chance -= this.population[index++].normalFitness;\r\n    }\r\n    return this.population[index - 1];\r\n  }\r\n\r\n\r\n\r\n  getTotal() {\r\n    let sum = 0;\r\n    for (let i = 0; i < this.population.length; i++) {\r\n      sum += this.population[i].fitness;\r\n    }\r\n    return sum;\r\n  }\r\n\r\n  getBest() {\r\n    return this.best;\r\n  }\r\n\r\n  // Compute the current \"most fit\" member of the population\r\n  evaluate() {\r\n    return false;\r\n    // let worldrecord = 0.0;\r\n    // let index = 0;\r\n    // for (let i = 0; i < this.population.length; i++) {\r\n    //   if (this.population[i].fitness > worldrecord) {\r\n    //     index = i;\r\n    //     worldrecord = this.population[i].fitness;\r\n    //     this.bestofThebest = this.population[index].fitness > this.bestofThebest.fitness ? this.population[index] : this.bestofThebest;\r\n    //   }\r\n\r\n    // }\r\n\r\n    // if (worldrecord >= 99) {\r\n    //   this.finished = true;\r\n    // }\r\n    // this.bestofThebest = this.population[index].fitness>this.bestofThebest.fitness?this.population[index] : this.bestofThebest;\r\n    // if(worldrecord > bestOverAll.fitness){\r\n    //   console.log(worldrecord, ' >',bestOverAll.fitness, ' ?' )\r\n    //   bestOverAll = this.population[index];\r\n    // }\r\n  }\r\n\r\n  isFinished() {\r\n    return this.finished;\r\n  }\r\n\r\n  getGenerations() {\r\n    return this.generations;\r\n  }\r\n\r\n  // Compute average fitness for the population\r\n\r\n\r\n}\r\nexport default Population;","import React from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport { connect } from 'react-redux';\r\nimport Button from 'react-bootstrap/Button'\r\nimport './showTime.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst ShowTime = ({ information, enrollment, final, dis_Group }) => {\r\n    let history = useHistory();\r\n    const [group, setGroup] = React.useState(0);\r\n    let isRotate = enrollment.rotationEnrollment;\r\n    enrollment = enrollment.enrollment;\r\n    if (!final || enrollment.length === 0 || !final.genes) {\r\n        return <><h1>Something went wrong...</h1>\r\n            <Button variant=\"primary\" style={{ marginTop: '38px' }}\r\n                onClick={() => {\r\n                    history.push('/1')\r\n\r\n                }}\r\n            >صفحه اصلی</Button></>\r\n    }\r\n    let table = final.genes;\r\n    let shanbe_8_10 = \"\";\r\n    let shanbe_10_12 = \"\";\r\n    let shanbe_2_4 = \"\";\r\n    let shanbe_4_6 = \"\";\r\n\r\n    let yekshanbe_8_10 = \"\";\r\n    let yekshanbe_10_12 = \"\";\r\n    let yekshanbe_2_4 = \"\";\r\n    let yekshanbe_4_6 = \"\";\r\n\r\n    let doshanbe_8_10 = \"\";\r\n    let doshanbe_10_12 = \"\";\r\n    let doshanbe_2_4 = \"\";\r\n    let doshanbe_4_6 = \"\";\r\n\r\n    let seshanbe_8_10 = \"\";\r\n    let seshanbe_10_12 = \"\";\r\n    let seshanbe_2_4 = \"\";\r\n    let seshanbe_4_6 = \"\";\r\n\r\n    let chaharshanbe_8_10 = \"\";\r\n    let chaharshanbe_10_12 = \"\";\r\n    let chaharshanbe_2_4 = \"\";\r\n    let chaharshanbe_4_6 = \"\";\r\n\r\n\r\n\r\n\r\n\r\n    for (let i = 0; i < table.length; i++) {\r\n\r\n        if (parseInt(enrollment[i][2]) === dis_Group[group]) {\r\n\r\n            let star = isRotate[i] ? \"*\" : \"\";\r\n            if (parseInt(table[i][0]) === 1) {\r\n\r\n                if (parseInt(table[i][1]) === 1) {\r\n                    shanbe_8_10 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 2) {\r\n                    shanbe_10_12 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 3) {\r\n                    shanbe_2_4 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 4) {\r\n                    shanbe_4_6 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            if (parseInt(table[i][0]) === 2) {\r\n\r\n\r\n\r\n                if (parseInt(table[i][1]) === 1) {\r\n                    yekshanbe_8_10 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star;\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 2) {\r\n                    yekshanbe_10_12 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 3) {\r\n                    yekshanbe_2_4 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 4) {\r\n                    yekshanbe_4_6 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            if (parseInt(table[i][0]) === 3) {\r\n                if (parseInt(table[i][1]) === 1) {\r\n                    doshanbe_8_10 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star;\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 2) {\r\n                    doshanbe_10_12 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 3) {\r\n                    doshanbe_2_4 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 4) {\r\n                    doshanbe_4_6 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            if (parseInt(table[i][0]) === 4) {\r\n                if (parseInt(table[i][1]) === 1) {\r\n                    seshanbe_8_10 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star;\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 2) {\r\n                    seshanbe_10_12 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 3) {\r\n                    seshanbe_2_4 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 4) {\r\n                    seshanbe_4_6 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n            if (parseInt(table[i][0]) === 5) {\r\n                if (parseInt(table[i][1]) === 1) {\r\n                    chaharshanbe_8_10 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star;\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 2) {\r\n                    chaharshanbe_10_12 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 3) {\r\n                    chaharshanbe_2_4 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 4) {\r\n                    chaharshanbe_4_6 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='all_Container'>\r\n            <Table striped bordered hover style={{ direction: 'rtl' }}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ساعت</th>\r\n                        <th>شنبه</th>\r\n                        <th>یکشنبه</th>\r\n                        <th>دوشنبه</th>\r\n                        <th>سه شنبه</th>\r\n                        <th>چهارشنبه</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>8-10</td>\r\n                        <td>{shanbe_8_10}</td>\r\n                        <td>{yekshanbe_8_10}</td>\r\n                        <td>{doshanbe_8_10}</td>\r\n                        <td>{seshanbe_8_10}</td>\r\n                        <td>{chaharshanbe_8_10}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>10-12</td>\r\n                        <td>{shanbe_10_12}</td>\r\n                        <td>{yekshanbe_10_12}</td>\r\n                        <td>{doshanbe_10_12}</td>\r\n                        <td>{seshanbe_10_12}</td>\r\n                        <td>{chaharshanbe_10_12}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>2-4</td>\r\n                        <td>{shanbe_2_4}</td>\r\n                        <td>{yekshanbe_2_4}</td>\r\n                        <td>{doshanbe_2_4}</td>\r\n                        <td>{seshanbe_2_4}</td>\r\n                        <td>{chaharshanbe_2_4}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>4-6</td>\r\n                        <td>{shanbe_4_6}</td>\r\n                        <td>{yekshanbe_4_6}</td>\r\n                        <td>{doshanbe_4_6}</td>\r\n                        <td>{seshanbe_4_6}</td>\r\n                        <td>{chaharshanbe_4_6}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n\r\n            <div className='show-detials'>\r\n                <h2>{`ورودی: ${information.group[dis_Group[group]]}`}</h2>\r\n                <div className='show-button'>\r\n\r\n                    <Button variant=\"dark\" onClick={() => setGroup((group + 1 < dis_Group.length) ? group + 1 : group)}>ورودی بعدی</Button>\r\n                    <Button variant=\"dark\" onClick={() => setGroup((group - 1 >= 0) ? group - 1 : group)}>ورودی قبلی</Button>\r\n\r\n                </div>\r\n            </div>\r\n            <Button variant=\"primary\" style={{ marginTop: '38px' }}\r\n                onClick={() => {\r\n                    history.push('/1')\r\n\r\n                }}\r\n            >صفحه اصلی</Button>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\nfunction mapStateToProps(state) {\r\n    const { information, enrollment, final, dis_Group } = state\r\n    return { information, enrollment, final, dis_Group }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ShowTime);\r\n\r\n\r\n\r\n","\r\nimport React from 'react';\r\n\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Getinput from './getInput';\r\nimport Myapp from './App';\r\nimport ShowTime from './showTime';\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className='app'>\r\n            <Switch>\r\n                <Route exact path=\"/1\" component={Getinput} />\r\n                <Route exact path=\"/2\" component={Myapp} />\r\n                <Route exact path=\"/3\" component={ShowTime} />\r\n                <Route  path=\"/\" component={Getinput} />\r\n\r\n\r\n            </Switch>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from \"react-router-dom\";\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store} >\n        <HashRouter >\n            <App />\n        </HashRouter>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}