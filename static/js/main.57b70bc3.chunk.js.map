{"version":3,"sources":["redux/reducers/enrollment.js","redux/reducers/information.js","redux/reducers/final.js","redux/reducers/distinct_group.js","redux/reducers/distinct_master.js","redux/root-reducer.js","redux/store.js","temp.js","getInput.jsx","App.js","DNA.js","Pupolation.js","showTime.jsx","showTimeForMaster.jsx","main.js","serviceWorker.js","index.js"],"names":["Initial_State","enrollment","dayEnrollment","timeEnrollment","rotationEnrollment","classEnrollment","Enrollment","state","action","type","master","course","group","time","day","rotation","clas","Infromation","payload","Group","Profs","combineReducers","information","final","dis_Group","dis_Profs","middleWares","logger","store","createStore","rootReducer","applyMiddleware","tempEnrollment","tempDay","tempTime","tempIsRotation","tempClass","withRouter","mainHistory","exit","history","React","useEffect","dispatch","getState","useState","setState","data","showEnroll","setShowEnroll","enrollTable","map","value","index","bottom","ListGroup","Item","key","classDropDown","Dropdown","as","onSelect","choose","eventKey","masterDropDown","rotationDropDown","courseDropDown","className","groupDropDown","timeDropDown","dayDropDown","DropdownButton","id","title","Button","variant","size","block","onClick","console","log","parseInt","newMaster","newCourse","newGruop","newTime","newDay","newClass","isRot","oldShow","concat","push","style","position","left","DNA","this","genes","fitness","normalFitness","userData","i","length","dna","Math","floor","random","score","theProf","theGroup","isRotation","theClass","theHour","theDay","number_of_rotation_in_same_time_for_prof","number_of_rotation_in_same_time_for_group","j","theProf2nd","theGroup2nd","isRotation2nd","theHour2nd","theDay2nd","theClass2nd","bounuce","partner","child1st","child2nd","mutationRate","bestOverAll","Population","popMax","population","matingPool","generations","finished","perfectScore","bestofThebest","avg","totalFitness","best","hotSpot","calcFitness","total","newpop","saved","saveMEjesus","partnerA","giveMeOneGoodChild","partnerB","child","crossover","mutate","first","second","third","fourth","num","chance","sum","sketch","p","po","bestPhrase","allPhrases","high","setup","createP","b","getOverAll","all","profs","groups","removeDuplicates","sort","noLoop","class","createCanvas","draw","clear","fill","text","naturalSelection","generate","evaluate","array","filter","a","indexOf","connect","useHistory","setGroup","isRotate","marginTop","table","shanbe_8_10","shanbe_10_12","shanbe_2_4","shanbe_4_6","yekshanbe_8_10","yekshanbe_10_12","yekshanbe_2_4","yekshanbe_4_6","doshanbe_8_10","doshanbe_10_12","doshanbe_2_4","doshanbe_4_6","seshanbe_8_10","seshanbe_10_12","seshanbe_2_4","seshanbe_4_6","chaharshanbe_8_10","chaharshanbe_10_12","chaharshanbe_2_4","chaharshanbe_4_6","star","Table","striped","bordered","hover","direction","App","exact","path","component","Getinput","Myapp","ShowTime","showTimeForMaster","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57b70bc3.chunk.js","sourcesContent":["\r\nconst Initial_State = {\r\n    enrollment: [],\r\n    dayEnrollment: [],\r\n    timeEnrollment: [],\r\n    rotationEnrollment: [],\r\n    classEnrollment: []\r\n\r\n};\r\n\r\n\r\nconst Enrollment = (state = Initial_State, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SET_Enrollment': return {\r\n            ...state,\r\n            enrollment: [...state.enrollment, action.enrollment],\r\n            dayEnrollment: [...state.dayEnrollment, action.dayEnrollment],\r\n            timeEnrollment: [...state.timeEnrollment, action.timeEnrollment],\r\n            rotationEnrollment: [...state.rotationEnrollment, action.rotationEnrollment],\r\n            classEnrollment:[...state.classEnrollment, action.classEnrollment]\r\n        }\r\n        case 'SET_Enrollment_Temp': return {\r\n\r\n            enrollment: action.enrollment,\r\n            dayEnrollment: action.dayEnrollment,\r\n            timeEnrollment: action.timeEnrollment,\r\n            rotationEnrollment: action.rotationEnrollment,\r\n            classEnrollment:action.classEnrollment,\r\n        }\r\n        case 'SECTOR_CLEAR': return Initial_State;\r\n\r\n        default: return state;\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\n\r\nexport default Enrollment;","\r\nconst Initial_State = {\r\n    master: ['دکتر کرمی', 'دکتر بگ محمدی', 'دکتر ولیزاده', 'دکتر تنهایی', 'دکتر شیری', 'دکتر طاهری', 'دکتر غلامی'],\r\n    course: ['معماری', 'شبکه', 'کامپایلر', 'جاوا', 'مدارمنطقی', 'بینایی', 'الگوریتم', 'مباحث ویژه', 'پایگاه داده', 'نرم افزار', 'طراحی زبان برنامه سازی', 'رباتیک'],\r\n    group: [95, 96, 97, 98],\r\n    time: ['بدون ساعت', '8-10', '10-12', '2-4', '4-6'],\r\n    day: ['بدون روز', 'شنبه', 'یکشنبه', 'دوشنبه', 'سه شنبه', 'چهارشنبه'],\r\n    rotation: ['Yes', 'No'],\r\n    clas:['بدون کلاس','302','303']\r\n\r\n};\r\n\r\n\r\nconst Infromation = (state = Initial_State, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n\r\n        default: return state;\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\n\r\nexport default Infromation;","\r\n\r\nconst Infromation = (state = null, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SET_FINAL_ANSWER': return action.payload;\r\n\r\n        default: return state;\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\n\r\nexport default Infromation;","\r\n\r\nconst Group = (state = [], action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SET_Group': return action.payload;\r\n\r\n        default: return state;\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\n\r\nexport default Group;","\r\n\r\nconst Profs = (state = [], action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SET_Profs': return action.payload;\r\n\r\n        default: return state;\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\n\r\nexport default Profs;","import { combineReducers } from 'redux';\r\nimport Enrollment from './reducers/enrollment';\r\nimport information from './reducers/information';\r\nimport final from './reducers/final';\r\nimport dis_Group from './reducers/distinct_group';\r\nimport dis_Profs from './reducers/distinct_master';\r\nexport default combineReducers({\r\n    enrollment: Enrollment,\r\n    information,\r\n    final,\r\n    dis_Group,\r\n    dis_Profs\r\n})","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './root-reducer';\r\nimport logger from 'redux-logger';\r\nconst middleWares = [logger];\r\n\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middleWares));\r\n// const store = createStore(rootReducer);\r\n\r\nexport default store;","export const tempEnrollment = [\r\n    [0, 0, 0, false],\r\n    [0, 0, 0, false],\r\n    [3, 1, 0, false],\r\n    [3, 1, 0, false],\r\n    [3, 2, 0, false],\r\n    [3, 2, 0, false],\r\n    [2, 3, 0, false],\r\n    [2, 3, 0, false],\r\n    [1, 4, 1, false],\r\n    [1, 4, 1, false],\r\n    [3, 5, 1, false],\r\n    [3, 5, 1, false],\r\n    [0, 6, 1, false],\r\n    [0, 6, 1, false],\r\n    [2, 7, 1, false],\r\n    [2, 7, 1, false],\r\n    [0, 8, 2, false],\r\n    [0, 8, 2, false],\r\n    [2, 9, 2, false],\r\n    [2, 9, 2, false],\r\n    [2, 10, 2, false],\r\n    [2, 10, 2, false],\r\n    [4, 11, 2, false],\r\n    [4, 11, 2, false],\r\n    [1, 0, 3, false],\r\n    [1, 0, 3, false],\r\n    [1, 3, 3, false],\r\n    [1, 3, 3, false],\r\n    [3, 11, 3, false],\r\n    [3, 11, 3, false],\r\n    [3, 6, 3, false],\r\n    [3, 6, 3, false]]\r\n\r\n// day\r\nexport const tempDay = [false, false, false, 3, false, false, false, false, 5, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\r\n\r\n// time\r\nexport const tempTime = [1, 1, 3, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\r\n\r\n\r\n// is rotation\r\nexport const tempIsRotation = [false, true, false, false, false, true, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false]\r\n\r\n\r\nexport const tempClass = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];\r\n\r\n\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport './get-input.css';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { withRouter } from \"react-router\";\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport store from './redux/store';\r\nimport Slide from 'react-reveal/Slide';\r\nimport { tempDay, tempEnrollment, tempIsRotation, tempTime, tempClass } from './temp';\r\n// import { master, course, group, time, day, rotation} from './makeData';\r\n\r\n\r\nfunction App({ history }) {\r\n\r\n    React.useEffect(() => {\r\n        store.dispatch({ type: 'SECTOR_CLEAR' });\r\n    }, []);\r\n    const { enrollment, information } = store.getState();\r\n    const { master, course, group, time, day, rotation, clas } = information;\r\n\r\n    const [state, setState] = React.useState({ master: 0, course: 0, group: 0, time: 0, day: 0, rotation: 1, clas: 0 });\r\n    const [showEnroll, setShowEnroll] = React.useState({ data: [] });\r\n\r\n\r\n    const enrollTable = showEnroll.data.map((value, index) =>\r\n        <Slide bottom><ListGroup.Item key={`tablenum${index}`}>{`${value}`}</ListGroup.Item></Slide>\r\n    )\r\n    const classDropDown = clas.map((value, index) =>\r\n        <Dropdown.Item as=\"button\" onSelect={(choose) => setState({ ...state, clas: choose })}\r\n            eventKey={index}\r\n            key={`class${index}`}\r\n        >{value}</Dropdown.Item>\r\n    );\r\n\r\n    const masterDropDown = master.map((value, index) =>\r\n        <Dropdown.Item as=\"button\" onSelect={(choose) => setState({ ...state, master: choose })}\r\n            eventKey={index}\r\n            key={`master${index}`}\r\n        >{value}</Dropdown.Item>\r\n    );\r\n    const rotationDropDown = rotation.map((value, index) =>\r\n        <Dropdown.Item as=\"button\" onSelect={(choose) => setState({ ...state, rotation: choose })}\r\n            eventKey={index}\r\n            key={`rotation${index}`}\r\n        >{value}</Dropdown.Item>\r\n    );\r\n\r\n\r\n    const courseDropDown = course.map((value, index) =>\r\n        <div className='dropcontainer'>\r\n            <Dropdown.Item as=\"button\" onSelect={(choose) => setState({ ...state, course: choose })}\r\n                eventKey={index}\r\n                key={`course${index}`}\r\n            >{value}</Dropdown.Item>\r\n        </div>\r\n    );\r\n\r\n    const groupDropDown = group.map((value, index) =>\r\n        <div className='dropcontainer'>\r\n            <Dropdown.Item as=\"button\" onSelect={(choose) => setState({ ...state, group: choose })}\r\n                eventKey={index}\r\n                key={`group${index}`}\r\n            >{value}</Dropdown.Item>\r\n        </div>\r\n    );\r\n\r\n\r\n    const timeDropDown = time.map((value, index) =>\r\n        <div className='dropcontainer'>\r\n            <Dropdown.Item as=\"button\" onSelect={(choose) => setState({ ...state, time: choose })}\r\n                eventKey={index}\r\n                key={`time${index}`}\r\n            >{value}</Dropdown.Item>\r\n        </div>\r\n    );\r\n\r\n    const dayDropDown = day.map((value, index) =>\r\n        <div className='dropcontainer'>\r\n            <Dropdown.Item as=\"button\" onSelect={(choose) => setState({ ...state, day: choose })}\r\n                eventKey={index}\r\n                key={`day${index}`}\r\n            >{value}</Dropdown.Item>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='main-input'>\r\n            <div className='get-input'>\r\n\r\n                <DropdownButton id=\"dropdown-item-button\" title={master[state.master]}>\r\n                    {masterDropDown}\r\n                </DropdownButton>\r\n                <DropdownButton id=\"dropdown-item-button2\" title={course[state.course]}>\r\n                    {courseDropDown}\r\n                </DropdownButton>\r\n                <DropdownButton id=\"dropdown-item-button2\" title={group[state.group]}>\r\n                    {groupDropDown}\r\n                </DropdownButton>\r\n                <DropdownButton id=\"dropdown-item-button2\" title={rotation[state.rotation]}>\r\n                    {rotationDropDown}\r\n                </DropdownButton>\r\n                <DropdownButton id=\"dropdown-item-button2\" title={time[state.time]}>\r\n                    {timeDropDown}\r\n                </DropdownButton>\r\n                <DropdownButton id=\"dropdown-item-button2\" title={day[state.day]}>\r\n                    {dayDropDown}\r\n                </DropdownButton>\r\n                <DropdownButton id=\"dropdown-item-button2\" title={clas[state.clas]}>\r\n                    {classDropDown}\r\n                </DropdownButton>\r\n\r\n\r\n\r\n\r\n                <div>\r\n                    <Button variant=\"secondary\" size=\"lg\" block\r\n                        onClick={() => {\r\n                            console.log(information)\r\n                            // enrollment.add([state.master, state.course, state.group]);\r\n                            store.dispatch({\r\n                                type: 'SET_Enrollment',\r\n                                enrollment: [state.master, state.course, state.group, (state.clas) !== 0 ? state.clas : false],\r\n                                timeEnrollment: (parseInt(state.time) !== 0) ? parseInt(state.time) : false,\r\n                                dayEnrollment: (parseInt(state.day) !== 0) ? parseInt(state.day) : false,\r\n                                rotationEnrollment: (information.rotation[state.rotation] === 'Yes') ? true : false,\r\n                                classEnrollment: (parseInt(state.clas) !== 0) ? parseInt(state.clas) : false\r\n                            })\r\n                            const newMaster = information.master[state.master];\r\n                            const newCourse = information.course[state.course];\r\n                            const newGruop = information.group[state.group];\r\n                            const newTime = ' - ' + information.time[state.time] + ' - ';\r\n                            const newDay = information.day[state.day] + ' - ';\r\n                            const newClass = (information.clas[state.clas] === 0 ? 'بدون کلاس' : information.clas[state.clas]) + ' - ';\r\n                            const isRot = information.rotation[state.rotation] === 'Yes' ? '-rotation' : '';\r\n                            let oldShow = showEnroll.data.concat(newMaster + ' - ' + newGruop + ' - ' + newCourse + newTime + newDay + newClass + isRot);\r\n\r\n                            setShowEnroll({ data: oldShow })\r\n\r\n                        }\r\n                        }>\r\n                        Add\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <Button variant=\"success\" onClick={() => {\r\n                history.push('/2');\r\n            }}\r\n            style={{position:'absolute',bottom:'5%'}}\r\n            >GO!!!</Button>\r\n\r\n            <Button onClick={() => {\r\n                store.dispatch({\r\n                    type: 'SET_Enrollment_Temp',\r\n                    enrollment: tempEnrollment,\r\n                    timeEnrollment: tempTime,\r\n                    dayEnrollment: tempDay,\r\n                    rotationEnrollment: tempIsRotation,\r\n                    classEnrollment: tempClass\r\n                })\r\n\r\n                history.push('/2');\r\n            }} variant=\"warning\" style={{ position: 'absolute', left: '0', bottom: '50px' }}>Use Default Value</Button>\r\n\r\n            <ListGroup>\r\n                {enrollTable}\r\n            </ListGroup>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(App);\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Population from './Pupolation';\nimport P5Wrapper from 'react-p5-wrapper';\nimport { withRouter } from 'react-router-dom';\nimport store from './redux/store';\nimport Button from 'react-bootstrap/Button'\n\n\nlet mainHistory;\nlet exit;\n\n\nfunction App({ history }) {\n\n  mainHistory = history;\n\n\n\n  return (\n    <div className=\"App\">\n      <div className='canvasContainer'>\n        <P5Wrapper sketch={sketch} ></P5Wrapper>\n      </div>\n\n      {/* <Table /> */}\n\n      <Button variant=\"danger\" onClick={() => {\n        exit();\n      }}\n      >Finish NOW</Button>\n    <h4>زمانی که تغییرات و بهترین برازندگی برای چندین نسل ثابت ماند، از این دکمه استفاده کنید</h4>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n\n\n\n\n\n\n\n\n\n\nfunction sketch(p) {\n  let po;\n  let bestPhrase;\n  let allPhrases;\n  let stats;\n  let high = { fitness: 0 }\n  let final;\n\n  p.setup = () => {\n    bestPhrase = p.createP(\"All fittneses:\");\n    exit = () => {\n      let b = po.getOverAll();\n      store.dispatch({ type: 'SET_FINAL_ANSWER', payload: b });\n      let all = store.getState().enrollment.enrollment;\n\n      let profs = [];\n      let groups = [];\n      for (let i = 0; i < all.length; i++) {\n        groups.push(parseInt(all[i][2]));\n        profs.push(parseInt(all[i][0]))\n      }\n      profs = removeDuplicates(profs);\n      groups = removeDuplicates(groups);\n      profs = profs.sort();\n      groups = groups.sort();\n      // console.log(groups, ' removeDuplicaties...')\n      store.dispatch({ type: 'SET_Group', payload: groups });\n      store.dispatch({ type: 'SET_Profs', payload: profs });\n\n      p.noLoop();\n      mainHistory.push('/3')\n    }\n    //bestPhrase.position(10,10);\n    bestPhrase.class(\"best\");\n\n    allPhrases = p.createP(\"All phrases:\");\n    allPhrases.position(600, 10);\n    allPhrases.class(\"all\");\n\n    p.createCanvas(640, 360);\n\n\n    // Create a population with a target phrase, mutation rate, and population max\n    po = new Population(200, 0.0137);\n  }\n\n  p.draw = () => {\n    p.clear();\n    po.calcFitness();\n    p.fill(20);\n\n    for (let i = 0; i < po.population.length; i++) {\n      p.text(po.population[i].fitness, 10, 10 * i);\n      if (high.fitness < po.population[i].fitness) {\n        high = po.population[i];\n      }\n\n    }\n    p.text('average: ' + po.avg, 40, 40)\n    po.naturalSelection();\n    po.generate();\n    po.calcFitness();\n    po.evaluate();\n    p.text(\"The Best Fittness Ever :  \" + po.getOverAll().fitness, 50, 90);\n    p.text(\"Total Generations: \" + po.generations, 60, 110)\n    if (po.finished) {\n\n      final = po.getOverAll();\n      // for (let i = 0; i < final.genes.length; i++) {\n      //   // console.log(' ostad:' + prof[enroll_prof[i]] + ' course:' + course[enroll_course[i]] + ' voridiye:' + group[enroll_group[i]] + ' ' + final.genes[i][0] + 'shanbe' + ' saat ' + final.genes[i][1] + ' ' + eroll_date_held_isV[i])\n      //   console.log(final)\n      // }\n      p.noLoop();\n      store.dispatch({ type: 'SET_FINAL_ANSWER', payload: final });\n      let all = store.getState().enrollment.enrollment;\n\n\n      let groups = [];\n      for (let i = 0; i < all.length; i++) {\n        groups.push(parseInt(all[i][2]));\n      }\n\n      groups = removeDuplicates(groups);\n      groups = groups.sort();\n      // console.log(groups, ' removeDuplicaties...')\n      store.dispatch({ type: 'SET_Group', payload: groups });\n\n\n\n\n      mainHistory.push('/3')\n\n    }\n\n\n\n\n\n  }\n\n}\n\nfunction removeDuplicates(array) {\n  return array.filter((a, b) => array.indexOf(a) === b)\n};","import store from './redux/store';\r\n\r\n\r\n\r\n// Constructor (makes a random DNA)\r\nclass DNA {\r\n    constructor() {\r\n        const { information, enrollment } = store.getState();\r\n        this.genes = [];\r\n        this.fitness = 0;\r\n        this.normalFitness = 0.0001;\r\n        this.userData = enrollment;\r\n\r\n\r\n        for (let i = 0; i < this.userData.enrollment.length; i++) {\r\n            let dna = [];\r\n\r\n            if (this.userData.dayEnrollment[i]) {\r\n                dna.push(this.userData.dayEnrollment[i]);\r\n            } else dna.push(Math.floor(Math.random() * 5) + 1); // Day from Sunday to Wensday\r\n\r\n            if (this.userData.timeEnrollment[i]) {\r\n                dna.push(this.userData.timeEnrollment[i]);\r\n            } else dna.push(Math.floor(Math.random() * 4) + 1); /// Hour from 08:00 AM to 06:30 PM\r\n\r\n            if (this.userData.classEnrollment[i]) {\r\n                dna.push(this.userData.classEnrollment[i]);\r\n            } else dna.push(Math.floor(Math.random() * 2) + 1); /// Class from 301 to 302\r\n\r\n            this.genes.push(dna);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // Fitness function \r\n    calcFitness() {\r\n        let score = 200;\r\n        for (let i = 0; i < this.genes.length; i++) {\r\n            let theProf = this.userData.enrollment[i][0];\r\n            let theGroup = this.userData.enrollment[i][2];\r\n            let isRotation = this.userData.rotationEnrollment[i];\r\n            let theClass = this.genes[i][2]\r\n            let theHour = this.genes[i][1];\r\n            let theDay = this.genes[i][0];\r\n            let number_of_rotation_in_same_time_for_prof = 0;\r\n            let number_of_rotation_in_same_time_for_group = 0;\r\n            for (let j = i + 1; j < this.genes.length; j++) {\r\n                let theProf2nd = this.userData.enrollment[j][0];\r\n                let theGroup2nd = this.userData.enrollment[j][2];\r\n                let isRotation2nd = this.userData.rotationEnrollment[j];\r\n                let theHour2nd = this.genes[j][1];\r\n                let theDay2nd = this.genes[j][0];\r\n                let theClass2nd = this.genes[j][2];\r\n                if (theDay === theDay2nd && theHour === theHour2nd) {\r\n                    score -= 8;\r\n                    if (theProf === theProf2nd) score -= 20;\r\n                    if (theGroup === theGroup2nd) score -= 20;\r\n                    if (theClass2nd === theClass && (!isRotation || !isRotation2nd)) score -= 10;\r\n                    if (isRotation2nd && isRotation && number_of_rotation_in_same_time_for_prof === 0) {\r\n                        let bounuce = false;\r\n                        if (theProf === theProf2nd) {\r\n                            number_of_rotation_in_same_time_for_prof++;\r\n                            score += 38;\r\n                            bounuce = true;\r\n\r\n                        }\r\n                        if (theGroup === theGroup2nd && number_of_rotation_in_same_time_for_group === 0) {\r\n                            score += 22;\r\n                            number_of_rotation_in_same_time_for_group++;\r\n                            if (bounuce) score += 4;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                if ((theDay !== theDay2nd || theHour !== theHour2nd) && isRotation && isRotation2nd && theProf === theProf2nd) {\r\n                    if (theDay !== theDay2nd) score--;\r\n                    if (theHour !== theHour2nd) score--;\r\n                }\r\n\r\n\r\n\r\n            }\r\n        }\r\n        if (score < 0) {\r\n            score = 1;\r\n        }\r\n\r\n        this.fitness = score;\r\n        this.normalFitness=score/200.0\r\n    }\r\n\r\n\r\n\r\n    // Crossover\r\n    crossover(partner) {\r\n        // A new child\r\n        let child1st = new DNA(this.userData);\r\n        let child2nd = new DNA(this.userData);\r\n        for (let i = 0; i < this.genes.length; i++) {\r\n            for (let j = 0; j < this.genes[i].length; j++) {\r\n                if (Math.floor(Math.random() * 100) % 2 === 0) {\r\n                    child1st.genes[i][j] = this.genes[i][j];\r\n                    child2nd.genes[i][j] = partner.genes[i][j];\r\n                } else {\r\n                    child2nd.genes[i][j] = this.genes[i][j];\r\n                    child1st.genes[i][j] = partner.genes[i][j];\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n        // child1st.mutate(0.1);\r\n        // child2nd.mutate(0.1);\r\n        return [child1st, child2nd];\r\n\r\n\r\n    }\r\n\r\n    mutate(mutationRate) {\r\n        for (let i = 0; i < this.genes.length; i++) {\r\n            if (Math.random(1) < mutationRate) {\r\n\r\n\r\n                if (!this.userData.dayEnrollment[i] || !this.userData.timeEnrollment[i] || !this.userData.classEnrollment[i]) {\r\n                    if (!this.userData.dayEnrollment[i]) {\r\n                        this.genes[i][0] = (Math.floor(Math.random() * 5) + 1); // Day from Sunday to Wensday\r\n\r\n                    }\r\n                    if (!this.userData.timeEnrollment[i]) {\r\n                        this.genes[i][1] = (Math.floor(Math.random() * 4) + 1); // Hour from 08:00 AM to 06:30 PM\r\n                    }\r\n                    if (!this.userData.classEnrollment[i]) {\r\n                        this.genes[i][2] = (Math.floor(Math.random() * 2) + 1); // Hour from 08:00 AM to 06:30 PM\r\n                    }\r\n                    break;\r\n\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default DNA;","import DNA from './DNA';\r\nimport store from './redux/store';\r\nlet bestOverAll = { fitness: -1 };\r\n\r\nclass Population {\r\n  constructor(popMax, mutationRate) {\r\n    const { enrollment } = store.getState();\r\n    this.population = []; // Array to hold the current population\r\n    this.matingPool = []; // ArrayList which we will use for our \"mating pool\"\r\n    this.generations = 0; // Number of generations\r\n    this.finished = false; // Are we finished evolving?\r\n    this.userData = enrollment; // Target phrase\r\n    this.mutationRate = mutationRate; // Mutation rate\r\n    this.perfectScore = 200;\r\n    this.bestofThebest = { fitness: -1 };\r\n    this.avg = 0;\r\n    this.totalFitness = 0;\r\n\r\n    this.best = { fitness: 0 };\r\n    this.population = [];\r\n    for (let i = 0; i < popMax; i++) {\r\n      this.population[i] = new DNA(this.userData, this.hotSpot);\r\n      this.best = this.population[i];\r\n      // this.bestofThebest = this.population[i];\r\n    }\r\n    this.matingPool = [];\r\n  }\r\n  getOverAll() {\r\n    return this.bestofThebest;\r\n  }\r\n\r\n  // Fill our fitness array with a value for every member of the population\r\n  calcFitness() {\r\n    this.avg = 0;\r\n    this.totalFitness = 0;\r\n    for (let i = 0; i < this.population.length; i++) {\r\n      this.population[i].calcFitness();\r\n      bestOverAll = this.population[i].fitness > bestOverAll.fitness ? this.population[i] : bestOverAll;\r\n      this.avg += this.population[i].fitness;\r\n      this.totalFitness += this.population[i].fitness;\r\n      if (this.bestofThebest.fitness < this.population[i].fitness) {\r\n        this.bestofThebest = this.population[i];\r\n      }\r\n    }\r\n    this.avg = this.avg / this.population.length;\r\n  }\r\n\r\n  // Generate a mating pool\r\n  naturalSelection() {\r\n    let total = this.totalFitness;\r\n    for (let i = 0; i < this.population.length; i++) {\r\n      this.population[i].normalFitness = this.population[i].fitness / total;\r\n    }\r\n  }\r\n\r\n  // Create a new generation\r\n  generate() {\r\n    // Refill the population with children from the mating pool\r\n    let newpop = [];\r\n    const saved = this.saveMEjesus();\r\n    // newpop.push(saved[0],saved[1],saved[2])\r\n    // console.log('tol poll=',this.matingPool.length)\r\n    for (let i = 0; i < (this.population.length / 2) - 1; i++) {\r\n      let partnerA = this.giveMeOneGoodChild();\r\n      let partnerB = this.giveMeOneGoodChild()\r\n      let child = partnerA.crossover(partnerB);\r\n      child[0].mutate(this.mutationRate);\r\n      child[1].mutate(this.mutationRate);\r\n      newpop.push(child[0]);\r\n      newpop.push(child[1]);\r\n    }\r\n    newpop.push(saved[0]);\r\n    newpop.push(saved[1]);\r\n  \r\n    this.generations++;\r\n\r\n    this.population = newpop;\r\n  }\r\n\r\n\r\n\r\n  saveMEjesus() {\r\n    let first = { fitness: -1 };\r\n    let second = { fitness: -1 };\r\n    let third = { fitness: -1 };\r\n    let fourth = { fitness: -1 };\r\n    for (let i = 0; i < this.population.length; i++) {\r\n      const num = this.population[i].fitness;\r\n      if (num > first.fitness) {\r\n        first = this.population[i];\r\n      } else {\r\n        if (num > second.fitness) {\r\n          second = this.population[i];\r\n        } else {\r\n          if (num > third.fitness) {\r\n            third = this.population[i];\r\n          } else {\r\n            if (num > fourth.fitness) {\r\n              fourth = this.population[i];\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return [first, second, third, fourth];\r\n  }\r\n\r\n\r\n\r\n\r\n  giveMeOneGoodChild() {\r\n\r\n    let chance = Math.random(1);\r\n    let index = 0;\r\n    while (chance > 0) {\r\n      chance -= this.population[index++].normalFitness;\r\n    }\r\n    return this.population[index - 1];\r\n  }\r\n\r\n\r\n\r\n  getTotal() {\r\n    let sum = 0;\r\n    for (let i = 0; i < this.population.length; i++) {\r\n      sum += this.population[i].fitness;\r\n    }\r\n    return sum;\r\n  }\r\n\r\n  getBest() {\r\n    return this.best;\r\n  }\r\n\r\n  // Compute the current \"most fit\" member of the population\r\n  evaluate() {\r\n    return false;\r\n    // let worldrecord = 0.0;\r\n    // let index = 0;\r\n    // for (let i = 0; i < this.population.length; i++) {\r\n    //   if (this.population[i].fitness > worldrecord) {\r\n    //     index = i;\r\n    //     worldrecord = this.population[i].fitness;\r\n    //     this.bestofThebest = this.population[index].fitness > this.bestofThebest.fitness ? this.population[index] : this.bestofThebest;\r\n    //   }\r\n\r\n    // }\r\n\r\n    // if (worldrecord >= 99) {\r\n    //   this.finished = true;\r\n    // }\r\n    // this.bestofThebest = this.population[index].fitness>this.bestofThebest.fitness?this.population[index] : this.bestofThebest;\r\n    // if(worldrecord > bestOverAll.fitness){\r\n    //   console.log(worldrecord, ' >',bestOverAll.fitness, ' ?' )\r\n    //   bestOverAll = this.population[index];\r\n    // }\r\n  }\r\n\r\n  isFinished() {\r\n    return this.finished;\r\n  }\r\n\r\n  getGenerations() {\r\n    return this.generations;\r\n  }\r\n\r\n  // Compute average fitness for the population\r\n\r\n\r\n}\r\nexport default Population;","import React from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport { connect } from 'react-redux';\r\nimport Button from 'react-bootstrap/Button'\r\nimport './showTime.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst ShowTime = ({ information, enrollment, final, dis_Group }) => {\r\n    let history = useHistory();\r\n    const [group, setGroup] = React.useState(0);\r\n    let isRotate = enrollment.rotationEnrollment;\r\n    enrollment = enrollment.enrollment;\r\n    if (!final || enrollment.length === 0 || !final.genes) {\r\n        return <><h1>Something went wrong...</h1>\r\n            <Button variant=\"primary\" style={{ marginTop: '38px' }}\r\n                onClick={() => {\r\n                    history.push('/1')\r\n\r\n                }}\r\n            >صفحه اصلی</Button></>\r\n    }\r\n    let table = final.genes;\r\n    let shanbe_8_10 = \"\";\r\n    let shanbe_10_12 = \"\";\r\n    let shanbe_2_4 = \"\";\r\n    let shanbe_4_6 = \"\";\r\n\r\n    let yekshanbe_8_10 = \"\";\r\n    let yekshanbe_10_12 = \"\";\r\n    let yekshanbe_2_4 = \"\";\r\n    let yekshanbe_4_6 = \"\";\r\n\r\n    let doshanbe_8_10 = \"\";\r\n    let doshanbe_10_12 = \"\";\r\n    let doshanbe_2_4 = \"\";\r\n    let doshanbe_4_6 = \"\";\r\n\r\n    let seshanbe_8_10 = \"\";\r\n    let seshanbe_10_12 = \"\";\r\n    let seshanbe_2_4 = \"\";\r\n    let seshanbe_4_6 = \"\";\r\n\r\n    let chaharshanbe_8_10 = \"\";\r\n    let chaharshanbe_10_12 = \"\";\r\n    let chaharshanbe_2_4 = \"\";\r\n    let chaharshanbe_4_6 = \"\";\r\n\r\n\r\n\r\n\r\n\r\n    for (let i = 0; i < table.length; i++) {\r\n        let className = information.clas[table[i][2]];\r\n\r\n        if (parseInt(enrollment[i][2]) === dis_Group[group]) {\r\n\r\n            let star = isRotate[i] ? \"*\" : \"\";\r\n            if (parseInt(table[i][0]) === 1) {\r\n\r\n                if (parseInt(table[i][1]) === 1) {\r\n                    shanbe_8_10 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star + '| \\n';\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 2) {\r\n                    shanbe_10_12 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star + '| \\n';\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 3) {\r\n                    shanbe_2_4 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 4) {\r\n                    shanbe_4_6 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            if (parseInt(table[i][0]) === 2) {\r\n\r\n\r\n\r\n                if (parseInt(table[i][1]) === 1) {\r\n                    yekshanbe_8_10 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star;\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 2) {\r\n                    yekshanbe_10_12 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star + '| \\n';\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 3) {\r\n                    yekshanbe_2_4 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 4) {\r\n                    yekshanbe_4_6 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            if (parseInt(table[i][0]) === 3) {\r\n                if (parseInt(table[i][1]) === 1) {\r\n                    doshanbe_8_10 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star;\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 2) {\r\n                    doshanbe_10_12 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star + '| \\n';\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 3) {\r\n                    doshanbe_2_4 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 4) {\r\n                    doshanbe_4_6 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            if (parseInt(table[i][0]) === 4) {\r\n                if (parseInt(table[i][1]) === 1) {\r\n                    seshanbe_8_10 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star;\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 2) {\r\n                    seshanbe_10_12 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star + '| \\n';\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 3) {\r\n                    seshanbe_2_4 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 4) {\r\n                    seshanbe_4_6 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n            if (parseInt(table[i][0]) === 5) {\r\n                if (parseInt(table[i][1]) === 1) {\r\n                    chaharshanbe_8_10 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star;\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 2) {\r\n                    chaharshanbe_10_12 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star + '| \\n';\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 3) {\r\n                    chaharshanbe_2_4 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 4) {\r\n                    chaharshanbe_4_6 += information.master[enrollment[i][0]] + ' - ' + information.course[enrollment[i][1]] + className + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='all_Container'>\r\n            <Table striped bordered hover style={{ direction: 'rtl' }}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ساعت</th>\r\n                        <th>شنبه</th>\r\n                        <th>یکشنبه</th>\r\n                        <th>دوشنبه</th>\r\n                        <th>سه شنبه</th>\r\n                        <th>چهارشنبه</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>8-10</td>\r\n                        <td>{shanbe_8_10}</td>\r\n                        <td>{yekshanbe_8_10}</td>\r\n                        <td>{doshanbe_8_10}</td>\r\n                        <td>{seshanbe_8_10}</td>\r\n                        <td>{chaharshanbe_8_10}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>10-12</td>\r\n                        <td>{shanbe_10_12}</td>\r\n                        <td>{yekshanbe_10_12}</td>\r\n                        <td>{doshanbe_10_12}</td>\r\n                        <td>{seshanbe_10_12}</td>\r\n                        <td>{chaharshanbe_10_12}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>2-4</td>\r\n                        <td>{shanbe_2_4}</td>\r\n                        <td>{yekshanbe_2_4}</td>\r\n                        <td>{doshanbe_2_4}</td>\r\n                        <td>{seshanbe_2_4}</td>\r\n                        <td>{chaharshanbe_2_4}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>4-6</td>\r\n                        <td>{shanbe_4_6}</td>\r\n                        <td>{yekshanbe_4_6}</td>\r\n                        <td>{doshanbe_4_6}</td>\r\n                        <td>{seshanbe_4_6}</td>\r\n                        <td>{chaharshanbe_4_6}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n\r\n            <div className='show-detials'>\r\n                <h2>{`ورودی: ${information.group[dis_Group[group]]}`}</h2>\r\n                <div className='show-button'>\r\n\r\n                    <Button variant=\"dark\" onClick={() => setGroup((group + 1 < dis_Group.length) ? group + 1 : group)}>ورودی بعدی</Button>\r\n                    <Button variant=\"dark\" onClick={() => setGroup((group - 1 >= 0) ? group - 1 : group)}>ورودی قبلی</Button>\r\n\r\n                </div>\r\n            </div>\r\n            <Button variant=\"primary\" style={{ position: 'absolute', bottom: '5%' }}\r\n                onClick={() => {\r\n                    history.push('/1')\r\n\r\n                }}\r\n            >صفحه اصلی</Button>\r\n            <Button variant=\"primary\" style={{ marginTop: '100px', position: 'absolute', left: 0 }}\r\n                onClick={() => {\r\n                    history.push('/4')\r\n\r\n                }}\r\n            > برنامه اساتید</Button>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\nfunction mapStateToProps(state) {\r\n    const { information, enrollment, final, dis_Group } = state\r\n    return { information, enrollment, final, dis_Group }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ShowTime);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport { connect } from 'react-redux';\r\nimport Button from 'react-bootstrap/Button'\r\nimport './showTime.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst ShowTime = ({ information, enrollment, final, dis_Profs }) => {\r\n    let history = useHistory();\r\n    const [group, setGroup] = React.useState(0);\r\n    let isRotate = enrollment.rotationEnrollment;\r\n    enrollment = enrollment.enrollment;\r\n    if (!final || enrollment.length === 0 || !final.genes) {\r\n        return <><h1>Something went wrong...</h1>\r\n            <Button variant=\"primary\" style={{ marginTop: '38px' }}\r\n                onClick={() => {\r\n                    history.push('/1')\r\n\r\n                }}\r\n            >صفحه اصلی</Button></>\r\n    }\r\n    let table = final.genes;\r\n    let shanbe_8_10 = \"\";\r\n    let shanbe_10_12 = \"\";\r\n    let shanbe_2_4 = \"\";\r\n    let shanbe_4_6 = \"\";\r\n\r\n    let yekshanbe_8_10 = \"\";\r\n    let yekshanbe_10_12 = \"\";\r\n    let yekshanbe_2_4 = \"\";\r\n    let yekshanbe_4_6 = \"\";\r\n\r\n    let doshanbe_8_10 = \"\";\r\n    let doshanbe_10_12 = \"\";\r\n    let doshanbe_2_4 = \"\";\r\n    let doshanbe_4_6 = \"\";\r\n\r\n    let seshanbe_8_10 = \"\";\r\n    let seshanbe_10_12 = \"\";\r\n    let seshanbe_2_4 = \"\";\r\n    let seshanbe_4_6 = \"\";\r\n\r\n    let chaharshanbe_8_10 = \"\";\r\n    let chaharshanbe_10_12 = \"\";\r\n    let chaharshanbe_2_4 = \"\";\r\n    let chaharshanbe_4_6 = \"\";\r\n\r\n\r\n\r\n\r\n\r\n    for (let i = 0; i < table.length; i++) {\r\n\r\n        if (parseInt(enrollment[i][0]) === dis_Profs[group]) {\r\n\r\n            let star = isRotate[i] ? \"*\" : \"\";\r\n            if (parseInt(table[i][0]) === 1) {\r\n\r\n                if (parseInt(table[i][1]) === 1) {\r\n                    shanbe_8_10 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 2) {\r\n                    shanbe_10_12 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 3) {\r\n                    shanbe_2_4 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 4) {\r\n                    shanbe_4_6 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            \r\n\r\n\r\n            if (parseInt(table[i][0]) === 2) {\r\n\r\n\r\n\r\n                if (parseInt(table[i][1]) === 1) {\r\n                    yekshanbe_8_10 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star;\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 2) {\r\n                    yekshanbe_10_12 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 3) {\r\n                    yekshanbe_2_4 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 4) {\r\n                    yekshanbe_4_6 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            if (parseInt(table[i][0]) === 3) {\r\n                if (parseInt(table[i][1]) === 1) {\r\n                    doshanbe_8_10 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star;\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 2) {\r\n                    doshanbe_10_12 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 3) {\r\n                    doshanbe_2_4 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 4) {\r\n                    doshanbe_4_6 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            if (parseInt(table[i][0]) === 4) {\r\n                if (parseInt(table[i][1]) === 1) {\r\n                    seshanbe_8_10 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star;\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 2) {\r\n                    seshanbe_10_12 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 3) {\r\n                    seshanbe_2_4 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 4) {\r\n                    seshanbe_4_6 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n            if (parseInt(table[i][0]) === 5) {\r\n                if (parseInt(table[i][1]) === 1) {\r\n                    chaharshanbe_8_10 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star;\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 2) {\r\n                    chaharshanbe_10_12 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 3) {\r\n                    chaharshanbe_2_4 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n                if (parseInt(table[i][1]) === 4) {\r\n                    chaharshanbe_4_6 += information.group[enrollment[i][2]] + ' - ' + information.course[enrollment[i][1]] + star + '| \\n';\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='all_Container'>\r\n            <Table striped bordered hover style={{ direction: 'rtl' }}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ساعت</th>\r\n                        <th>شنبه</th>\r\n                        <th>یکشنبه</th>\r\n                        <th>دوشنبه</th>\r\n                        <th>سه شنبه</th>\r\n                        <th>چهارشنبه</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>8-10</td>\r\n                        <td>{shanbe_8_10}</td>\r\n                        <td>{yekshanbe_8_10}</td>\r\n                        <td>{doshanbe_8_10}</td>\r\n                        <td>{seshanbe_8_10}</td>\r\n                        <td>{chaharshanbe_8_10}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>10-12</td>\r\n                        <td>{shanbe_10_12}</td>\r\n                        <td>{yekshanbe_10_12}</td>\r\n                        <td>{doshanbe_10_12}</td>\r\n                        <td>{seshanbe_10_12}</td>\r\n                        <td>{chaharshanbe_10_12}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>2-4</td>\r\n                        <td>{shanbe_2_4}</td>\r\n                        <td>{yekshanbe_2_4}</td>\r\n                        <td>{doshanbe_2_4}</td>\r\n                        <td>{seshanbe_2_4}</td>\r\n                        <td>{chaharshanbe_2_4}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>4-6</td>\r\n                        <td>{shanbe_4_6}</td>\r\n                        <td>{yekshanbe_4_6}</td>\r\n                        <td>{doshanbe_4_6}</td>\r\n                        <td>{seshanbe_4_6}</td>\r\n                        <td>{chaharshanbe_4_6}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n\r\n            <div className='show-detials'>\r\n                <h2>{`استاد: ${information.master[dis_Profs[group]]}`}</h2>\r\n                <div className='show-button'>\r\n\r\n                    <Button variant=\"dark\" onClick={() => setGroup((group + 1 < dis_Profs.length) ? group + 1 : group)}>استاد بعدی</Button>\r\n                    <Button variant=\"dark\" onClick={() => setGroup((group - 1 >= 0) ? group - 1 : group)}>استاد قبلی</Button>\r\n\r\n                </div>\r\n            </div>\r\n            <Button variant=\"primary\" style={{ position: 'absolute', bottom: '5%' }}\r\n                onClick={() => {\r\n                    history.push('/1')\r\n\r\n                }}\r\n            >صفحه اصلی</Button>\r\n            <Button variant=\"primary\" style={{ marginTop: '100px', position:'absolute',left:0 }}\r\n                onClick={() => {\r\n                    history.push('/3')\r\n\r\n                }}\r\n            >برنامه ورودی ها</Button>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\nfunction mapStateToProps(state) {\r\n    const { information, enrollment, final, dis_Profs } = state\r\n    return { information, enrollment, final, dis_Profs }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ShowTime);\r\n\r\n\r\n\r\n","\r\nimport React from 'react';\r\n\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Getinput from './getInput';\r\nimport Myapp from './App';\r\nimport ShowTime from './showTime';\r\nimport showTimeForMaster from './showTimeForMaster';\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className='app'>\r\n            <Switch>\r\n                <Route exact path=\"/1\" component={Getinput} />\r\n                <Route exact path=\"/2\" component={Myapp} />\r\n                <Route exact path=\"/3\" component={ShowTime} />\r\n                <Route exact path=\"/4\" component={showTimeForMaster} />\r\n                <Route  path=\"/\" component={Getinput} />\r\n\r\n\r\n            </Switch>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from \"react-router-dom\";\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store} >\n        <HashRouter >\n            <App />\n        </HashRouter>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}